<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Graduate Student Tracking System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link rel="stylesheet" href="/stylesheet.css">
</head>
<body>
<div class="container">
    <div class="row">
        <div class="mb-3">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title text-center">
                        Graduate Student Tracking System
                    </h3>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="mb-4 col-sm-6">
            <div class="card">
                <div class="card-body">
                    <form action="/degree-audit" method="POST">
                        <input type="hidden" name="course" id="courseAdd" value="<%= cookies ? cookies.course : {} %>">
                        <input type="hidden" name="address" id="address">
                        <h5 class="card-title text-center mb-4">Add Courses</h5>
                        <p class="card-text mb-4">Some text here.</p>
                        <div class="mb-4">
                            <label for="programSelect" class="form-label">Program</label>
                            <select class="form10-select form-select" aria-label=".form-select example"
                                    id="programSelect" name="program"
                                    required>
                                <option value="msls" <%= cookies && cookies.program === "msls" ? "selected" : {} %>>MSLS
                                    - Master of Science in Library Science
                                </option>
                                <option value="msis" <%= cookies && cookies.program === "msis" ? "selected" : {} %>>MSIS
                                    - Master of Science in Information Science
                                </option>
                            </select>
                        </div>
                        <div class="mb-4">
                            <label for="specializationSelect" class="form-label">Specialization</label>
                            <select class="form10-select form-select" aria-label=".form-select example"
                                    id="specializationSelect" name="specialization"
                                    required>
                                <% for (let specialization of specializations){ %>
                                    <option value=<%= specialization[0] %> <%= cookies && cookies.specialization === String(specialization[0]) ? "selected" : {} %>><%= specialization[0] === 0 ? "None" : specialization[1] %></option>
                                <% } %>
                            </select>
                        </div>
                        <div class="mb-4">
                            <label for="capstoneSelect" class="form-label">Capstone Track</label>
                            <select class="form10-select form-select" aria-label=".form-select example"
                                    id="capstoneSelect" name="capstone"
                                    required>
                                <option value="research" <%= cookies && cookies.capstone === "research" ? "selected" : {} %>>
                                    Independent Research
                                </option>
                                <option value="practicum" <%= cookies && cookies.capstone === "practicum" ? "selected" : {} %>>
                                    Practicum Experience
                                </option>
                            </select>
                        </div>
                        <div class="mb-4 row">
                            <label for="courseSelect" class="form-label">Course</label>
                            <div class="col-10">
                                <select class="form10-select form-select" aria-label=".form-select example"
                                        id="courseSelect" required>
                                    <% for (let course of courses){ %>
                                        <option value=<%= 0 %>><%= `${course[0]} ${course[1]} - ${course[2]}` %></option>
                                    <% } %>
                                </select>
                            </div>
                            <div class="col-2">
                                <button type="button" onclick="addCourse()" class="btn btn-primary mb-3">Add</button>
                            </div>
                        </div>
                        <div>
                            <button class="btn btn-success mb-4">Generate Degree Audit</button>
                            <button class="btn btn-success mb-4" onclick="changeAddress()">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="mb-4 col-sm-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title text-center">Selected Courses</h5>
                    <p class="card-text">Some text here.</p>
                    <ul class="mb-3 list-group list-group-flush" id="courseSection">
                        <% if(cookies && cookies.course && cookies.course.length > 0){
                                for(let course of cookies.course.split('&&&').sort()){ %>
                            <li class="list-group-item" id="<%= course %>"><%= course %>
                                <button class="btn btn-danger btn-sm right" type="button" onclick="remove(this)">
                                    Remove
                                </button>
                            </li>
                        <% }} %>
                    </ul>
                    <div>
                        <button class="btn btn-danger mb-4" type="button" onclick="removeAll()">Remove All Courses
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</body>
</html>

<script>
    function addCourse() {
        const removeButton = document.createElement("button");
        const removeButtonText = document.createTextNode("Remove");
        const courseSection = document.getElementById("courseSection");
        const courseNode = document.createElement("li");
        const course = document.getElementById("courseSelect");
        const courseNodeText = document.createTextNode(course.options[course.selectedIndex].text);
        const courseAdd = document.getElementById("courseAdd");

        // Avoid adding duplicate courses
        for (let courseAdded of courseAdd.value.split("&&&")) {
            if (course.options[course.selectedIndex].text === courseAdded) {
                alert("You have already added this course.");
                return;
            }
        }

        if (courseAdd.value.length !== 0) {
            courseAdd.value += "&&&" + course.options[course.selectedIndex].text;
        } else {
            courseAdd.value = course.options[course.selectedIndex].text;
        }
        courseNode.className = "list-group-item";
        courseNode.id = course.options[course.selectedIndex].text;
        removeButton.className = "btn btn-danger btn-sm right";
        removeButton.addEventListener("click", function () {
            let newValue = [];
            for (let value of courseAdd.value.split('&&&')) {
                if (value !== removeButton.parentNode.id) {
                    newValue.push(value);
                }
            }
            courseAdd.value = newValue.join('&&&');
            courseSection.removeChild(courseNode);
        });
        courseNode.append(courseNodeText);
        removeButton.append(removeButtonText);
        courseNode.append(removeButton);
        courseSection.appendChild(courseNode);
    }

    // "Remove" button
    function remove(el) {
        // const courseSection = document.getElementById("courseSection");

        const courseAdd = document.getElementById("courseAdd");
        let newValue = [];
        for (let value of courseAdd.value.split("&&&")) {
            if (value !== el.parentNode.id) {
                newValue.push(value);
            }
        }
        courseAdd.value = newValue.join("&&&");
        el.parentNode.remove();
    }

    // "Remove All Courses" button
    function removeAll() {
        const courseSection = document.getElementById("courseSection");
        const courseAdd = document.getElementById("courseAdd");
        while (courseSection.lastElementChild) {
            let newValue = [];
            for (let value of courseAdd.value.split("&&&")) {
                if (value !== courseSection.lastElementChild.id) {
                    newValue.push(value);
                }
            }
            courseSection.removeChild(courseSection.lastElementChild);
            courseAdd.value = newValue.join("&&&");
        }
    }

    // "save" button and "Generate Degree Audit" button go to different address
    function changeAddress() {
        const address = document.getElementById("address");
        address.value = "save";
    }
</script>