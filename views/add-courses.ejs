<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta
            name="viewport"
            content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"
    />
    <meta http-equiv="X-UA-Compatible" content="ie=edge"/>
    <title>Graduate Student Tracking System</title>
    <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi"
            crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/stylesheet.css"/>
</head>
<body>
<div class="container">
    <div class="block">
        <div class="card">
            <h3 class="center"><b>Graduate Student Tracking System</b></h3>
        </div>
    </div>
    <div class="block">
        <div class="card">
            <h4 class="center"><b>Add Courses</b></h4>
            <p>
                Check out all SILS courses
                <a href="https://sils.unc.edu/programs/graduate/msls/curriculum-spring2022">here</a>!
            </p>
            <p>
                For a non-SILS course, INLS 490, INLS 690, INLS 890, or a SILS course
                that is permitted to fulfill a different bin, please add the course
                manually.
            </p>
            <form id="courseForm" action="/degree-audit/generate" method="POST">
                <input type="hidden" name="course" id="courseAdd" value="<%= cookies ? cookies.course : null %>"/>
                <div>
                    <label for="programSelect" class="form-label">Program</label>
                    <select
                            class="form10-select form-select"
                            aria-label=".form-select example"
                            id="programSelect"
                            name="program"
                            required
                    >
                        <option value="MSLS" <%= cookies && cookies.program === "MSLS" ? "selected" : "" %>>
                            MSLS - Master of Science in Library Science
                        </option>
                        <option value="MSIS" <%= cookies && cookies.program === "MSIS" ? "selected" : "" %>>
                            MSIS - Master of Science in Information Science
                        </option>
                    </select>
                </div>
                <div>
                    <label for="specializationSelect" class="form-label">Specialization</label>
                    <select
                            class="form10-select form-select"
                            aria-label=".form-select example"
                            id="specializationSelect"
                            name="specialization"
                            required
                    >
                        <% for (let specialization of specializations){ %>
                            <option value="<%= specialization[0] + ' - ' + specialization[1] %>" <%= cookies && cookies.specialization === String(specialization[0]) ? "selected" : {} %>><%= specialization[0] === 0 ? "None" : specialization[1] %></option>
                        <% } %>
                    </select>
                </div>
                <div>
                    <label for="capstoneSelect" class="form-label">Capstone Track</label>
                    <select class="form10-select form-select" aria-label=".form-select example" id="capstoneSelect"
                            name="capstone" required>
                        <option value="research" <%= cookies && cookies.capstone === "research" ? "selected" : {} %>>
                            Independent Research
                        </option>
                        <option value="practicum" <%= cookies && cookies.capstone === "practicum" ? "selected" : {} %>>
                            Practicum Experience
                        </option>
                    </select>
                </div>
                <div>
                    <label for="courseSelect" class="form-label">Course</label>
                    <button type="button" class="button-show" onclick="manualInput()">Course not found? Enter course
                        manually
                    </button>
                    <div class="form-row" id="CourseSelection">
                        <select class="form10-select form-select" aria-label=".form-select example" id="courseSelect"
                                required>
                            <% for (let course of courses) { %>
                                <option value=<%= 0 %>>
                                    <%= `${course[0]} ${course[1]} - ${course[2]}` %>
                                </option>
                            <% } %>
                        </select>
                        <button type="button" onclick="addCourse()" class="button-add">Add</button>
                    </div>
                    <div class="extra-form-row" id="extraCourseSelection">
                        <div>
                            <input type="text" class="form-control" placeholder="INLS" id="extraCourseSubject">
                            <input type="text" class="form-control" placeholder="400" id="extraCourseNumber">
                        </div>
                        <div>
                            <select class="form10-select form-select" aria-label=".form-select example"
                                    id="extraCourseBin"
                            >
                                <% for (let bin of bins) { %>
                                    <option value=<%= bin[0] %>>
                                        <%= bin[1] %>
                                    </option>
                                <% } %>
                            </select>
                            <select class="form10-select form-select" aria-label=".form-select example"
                                    id="extraCourseCredit"
                            >
                                <option value=1>1 credit</option>
                                <option value=1.5>1.5 credits</option>
                                <option value=2>2 credits</option>
                                <option value=3 selected>3 credits</option>
                                <option value=4>4 credits</option>
                            </select>
                        </div>
                        <button type="button" onclick="addExtraCourse()" class="button-add">Add</button>
                    </div>
                </div>
                <div>
                    <button class="button-submit">Generate Degree Audit</button>
                </div>
            </form>
        </div>
        <div class="card" id="selectcourse">
            <h4 class="center"><b>Selected Courses</b></h4>
            <ul id="courseSection">
                <% if(cookies && cookies.course && cookies.course.length > 0){
                    let display;
                        for(let course of cookies.course.split('&&&').sort()){
                    if (course.split(' - ').length === 3) {
                        const splits = course.split(' - ');
                        display = `${splits[0]} (${splits[1].split(': ')[1]}, ${splits[2].split(': ')[1]} ${splits[2].split(': ')[0].toLowerCase()}`;
                        if (splits[2].split(': ')[1] !== "1") {
                            display += "s)"
                        }else{
                            display+= ")"
                        }
                    } else {
                        display = course;
                    } %>
                <li class="list-group-item" id="<%= course %>"><%= display %>
                    <button class="btn-remove" type="button" onclick="remove(this)">
                        Remove
                    </button>
                </li>
                <% }} %>
            </ul>
            <div>
                <button class="btn-remove" type="button" onclick="removeAll()">Remove All Courses</button>
            </div>
        </div>
    </div>
</div>
</body>
</html>

<script>
    function addCourse() {
        const removeButton = document.createElement("button");
        const removeButtonText = document.createTextNode("Remove");
        const courseSection = document.getElementById("courseSection");
        const courseNode = document.createElement("li");
        const course = document.getElementById("courseSelect");
        const courseNodeText = document.createTextNode(course.options[course.selectedIndex].text);
        const courseAdd = document.getElementById("courseAdd");
        // Avoid adding duplicate courses
        for (let courseAdded of courseAdd.value.split("&&&")) {
            if (course.options[course.selectedIndex].text === courseAdded) {
                alert("You have already added this course.");
                return;
            }
        }
        if (courseAdd.value.length !== 0) {
            courseAdd.value += "&&&" + course.options[course.selectedIndex].text;
        } else {
            courseAdd.value = course.options[course.selectedIndex].text;
        }
        courseNode.className = "list-group-item";
        courseNode.id = course.options[course.selectedIndex].text;
        removeButton.className = "btn-remove right";
        removeButton.addEventListener("click", function () {
            let newValue = [];
            for (let value of courseAdd.value.split('&&&')) {
                if (value !== removeButton.parentNode.id) {
                    newValue.push(value);
                }
            }
            courseAdd.value = newValue.join('&&&');
            courseSection.removeChild(courseNode);
        });
        courseNode.append(courseNodeText);
        removeButton.append(removeButtonText);
        courseNode.append(removeButton);
        courseSection.appendChild(courseNode);
        save();
    }

    function addExtraCourse() {
        if (!document.getElementById("extraCourseSubject").value || !document.getElementById("extraCourseNumber").value) {
            alert("Please enter course subject and course number.")
            return;
        }
        const removeButton = document.createElement("button");
        const removeButtonText = document.createTextNode("Remove");
        const courseSection = document.getElementById("courseSection");
        const courseNode = document.createElement("li");
        const courseSubject = document.getElementById("extraCourseSubject").value.toUpperCase();
        const courseNumber = document.getElementById("extraCourseNumber").value.toUpperCase();
        const courseBin = document.getElementById("extraCourseBin");
        const courseCredit = document.getElementById("extraCourseCredit").value.toUpperCase();
        const courseName = courseSubject + " " + courseNumber;
        let courseValue = courseName + " (" + courseBin.options[courseBin.selectedIndex].text + ", " + courseCredit;
        if (courseCredit === "1") {
            courseValue += " credit)"
        } else {
            courseValue += " credits)"
        }
        const courseNameBin = courseName + " - Bin " + courseBin.selectedIndex + ": " + courseBin.options[courseBin.selectedIndex].text + " - Credit: " + courseCredit;
        //const courseNodeText = document.createTextNode(courseNameBin);
        const courseNodeText = document.createTextNode(courseValue);
        const courseAdd = document.getElementById("courseAdd");
        // Avoid adding duplicate courses
        for (let courseAdded of courseAdd.value.split("&&&")) {
            const courseAddedName = courseAdded.split(" - ")[0];
            if (courseName === courseAddedName) {
                alert("You have already added this course.");
                return;
            }
        }

        if (courseAdd.value.length !== 0) {
            courseAdd.value += "&&&" + courseNameBin;
        } else {
            courseAdd.value = courseNameBin;
        }
        courseNode.className = "list-group-item";
        courseNode.id = courseNameBin;
        removeButton.className = "btn-remove right";
        removeButton.addEventListener("click", function () {
            let newValue = [];
            for (let value of courseAdd.value.split('&&&')) {
                if (value !== removeButton.parentNode.id) {
                    newValue.push(value);
                }
            }
            courseAdd.value = newValue.join('&&&');
            courseSection.removeChild(courseNode);
        });
        courseNode.append(courseNodeText);
        removeButton.append(removeButtonText);
        courseNode.append(removeButton);
        courseSection.appendChild(courseNode);
        save();
    }

    // "Remove" button
    function remove(el) {
        const courseAdd = document.getElementById("courseAdd");
        let newValue = [];
        for (let value of courseAdd.value.split("&&&")) {
            if (value !== el.parentNode.id) {
                newValue.push(value);
            }
        }
        courseAdd.value = newValue.join("&&&");
        el.parentNode.remove();
        save();
    }

    // "Remove All Courses" button
    function removeAll() {
        const courseSection = document.getElementById("courseSection");
        const courseAdd = document.getElementById("courseAdd");
        while (courseSection.lastElementChild) {
            let newValue = [];
            for (let value of courseAdd.value.split("&&&")) {
                if (value !== courseSection.lastElementChild.id) {
                    newValue.push(value);
                }
            }
            courseSection.removeChild(courseSection.lastElementChild);
            courseAdd.value = newValue.join("&&&");
        }
        save();
    }

    function save() {
        const courseAdd = document.getElementById("courseAdd");
        const program = document.getElementById("programSelect");
        const specialization = document.getElementById("specializationSelect");
        const capstone = document.getElementById("capstoneSelect");
        document.cookie = `course=${courseAdd.value}; expires=Thu, 01 Jan 2099 00:00:00 UTC; path=/`;
        document.cookie = `program=${program.value}; expires=Thu, 01 Jan 2099 00:00:00 UTC; path=/`;
        document.cookie = `specialization=${specialization.value}; expires=Thu, 01 Jan 2099 00:00:00 UTC; path=/`;
        document.cookie = `capstone=${capstone.value}; expires=Thu, 01 Jan 2099 00:00:00 UTC; path=/`;
    }

    function manualInput() {
        const block = document.getElementById('extraCourseSelection');
        const originBlock = document.getElementById('CourseSelection');
        const showButton = document.getElementsByClassName('button-show')[0];
        if (block.style.display === "flex") {
            block.style.display = "none";
            originBlock.style.display = "flex";
            showButton.style.color = "rgb(54, 121, 255)";
            showButton.textContent = "Course not found? Enter course manually"
        } else {
            block.style.display = "flex";
            originBlock.style.display = "none";
            showButton.textContent = "Back to course drop-down list"
        }
    }

</script>