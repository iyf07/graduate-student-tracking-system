<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Graduate Student Tracking System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link rel="stylesheet" href="/stylesheet.css">
</head>
<body>
<div class="container">
    <div class="row">
        <div class="mb-3 card">
            <h3 class="text-center">
                <br><b>Graduate Student Tracking System</b><br><br>
            </h3>
        </div>
    </div>
    <div class="row">
        <div class="mb-4 col-sm-6">
            <div class="card">
                <div class="card-body">
                    <form id="courseForm" action="/degree-audit/generate" method="POST">
                        <input type="hidden" name="course" id="courseAdd" value="<%= cookies ? cookies.course : {} %>">
                        <input type="hidden" name="address" id="address">
                        <h4 class="card-title text-center mb-3"><b>Add Courses</b></h4>
                        <p class="card-text mb-3">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">Check out all SILS courses <a
                                        href="https://sils.unc.edu/programs/graduate/msls/curriculum-spring2022">here</a>!
                            </li>
                            <li class="list-group-item">For a non-SILS course, INLS 490, INLS 690, INLS 890, or a SILS course that is permitted to fulfill a different bin, please add the course manually.</li>
                        </ul>
                        </p>
                        <div class="mb-4">
                            <label for="programSelect" class="form-label">Program</label>
                            <select class="form10-select form-select" aria-label=".form-select example"
                                    id="programSelect" name="program"
                                    required>
                                <option value="MSLS" <%= cookies && cookies.program === "MSLS" ? "selected" : {} %>>MSLS
                                    - Master of Science in Library Science
                                </option>
                                <option value="MSIS" <%= cookies && cookies.program === "MSIS" ? "selected" : {} %>>MSIS
                                    - Master of Science in Information Science
                                </option>
                            </select>
                        </div>
                        <div class="mb-4">
                            <label for="specializationSelect" class="form-label">Specialization</label>
                            <select class="form10-select form-select" aria-label=".form-select example"
                                    id="specializationSelect" name="specialization"
                                    required>
                                <% for (let specialization of specializations){ %>
                                    <option value=<%= specialization[0] %> <%= cookies && cookies.specialization === String(specialization[0]) ? "selected" : {} %>><%= specialization[0] === 0 ? "None" : specialization[1] %></option>
                                <% } %>
                            </select>
                        </div>
                        <div class="mb-4">
                            <label for="capstoneSelect" class="form-label">Capstone Track</label>
                            <select class="form10-select form-select" aria-label=".form-select example"
                                    id="capstoneSelect" name="capstone"
                                    required>
                                <option value="research" <%= cookies && cookies.capstone === "research" ? "selected" : {} %>>
                                    Independent Research
                                </option>
                                <option value="practicum" <%= cookies && cookies.capstone === "practicum" ? "selected" : {} %>>
                                    Practicum Experience
                                </option>
                            </select>
                        </div>
                        <div class="mb-4">
                            <label for="courseSelect" class="form-label">Course</label>
                            <div class="row">
                                <div class="col-10">
                                    <select class="form10-select form-select" aria-label=".form-select example"
                                            id="courseSelect" required>
                                        <% for (let course of courses){ %>
                                            <option value=<%= 0 %>><%= `${course[0]} ${course[1]} - ${course[2]}` %></option>
                                        <% } %>
                                    </select>
                                </div>
                                <div class="col-2">
                                    <button type="button" onclick="addCourse()" class="button-add">Add</button>
                                </div>
                            </div>
                        </div>
                        <div class="mb-4 row" id="extraCourseSelect">
                            <div class="col-2">
                                <input type="text" class="form-control" placeholder="INLS" id="extraCourseSubject">
                            </div>
                            <div class="col-2">
                                <input type="text" class="form-control" placeholder="400" id="extraCourseNumber">
                            </div>
                            <div class="col-3">
                                <select class="form10-select form-select" aria-label=".form-select example"
                                        id="extraCourseBin">
                                    <% for (let bin of bins){ %>
                                        <option value=<%= bin[0] %>><%= bin[1] %></option>
                                    <% } %>
                                </select>
                            </div>
                            <div class="col-3">
                                <select class="form10-select form-select" aria-label=".form-select example"
                                        id="extraCourseCredit">
                                    <option value=1>1 credit</option>
                                    <option value=1.5>1.5 credits</option>
                                    <option value=2>2 credits</option>
                                    <option value=3 selected>3 credits</option>
                                    <option value=4>4 credits</option>
                                </select>
                            </div>
                            <div class="col-2">
                                <button type="button" onclick="addExtraCourse()" class="button-add">Add</button>
                            </div>
                        </div>
                        <div>
                            <button class="button-81">Generate Degree Audit</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="mb-4 col-sm-6" id="selectcourse">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title text-center mb-3"><b>Selected Courses</b></h4>
                    <p class="card-text">
                    </p>
                    <ul class="mb-3 list-group list-group-flush" id="courseSection">
                        <% if(cookies && cookies.course && cookies.course.length > 0){
                                for(let course of cookies.course.split('&&&').sort()){ %>
                            <li class="list-group-item" id="<%= course %>"><%= course %>
                                <button class="btn-remove right" type="button" onclick="remove(this)">
                                    Remove
                                </button>
                            </li>
                        <% }} %>
                    </ul>
                    <div>
                        <button class="btn-remove" type="button" onclick="removeAll()">Remove All Courses
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</body>
</html>

<script>
    function addCourse() {
        const removeButton = document.createElement("button");
        const removeButtonText = document.createTextNode("Remove");
        const courseSection = document.getElementById("courseSection");
        const courseNode = document.createElement("li");
        const course = document.getElementById("courseSelect");
        const courseNodeText = document.createTextNode(course.options[course.selectedIndex].text);
        const courseAdd = document.getElementById("courseAdd");

        // Avoid adding duplicate courses
        for (let courseAdded of courseAdd.value.split("&&&")) {
            if (course.options[course.selectedIndex].text === courseAdded) {
                alert("You have already added this course.");
                return;
            }
        }

        if (courseAdd.value.length !== 0) {
            courseAdd.value += "&&&" + course.options[course.selectedIndex].text;
        } else {
            courseAdd.value = course.options[course.selectedIndex].text;
        }
        courseNode.className = "list-group-item";
        courseNode.id = course.options[course.selectedIndex].text;
        removeButton.className = "btn-remove right";
        removeButton.addEventListener("click", function () {
            let newValue = [];
            for (let value of courseAdd.value.split('&&&')) {
                if (value !== removeButton.parentNode.id) {
                    newValue.push(value);
                }
            }
            courseAdd.value = newValue.join('&&&');
            courseSection.removeChild(courseNode);
        });
        courseNode.append(courseNodeText);
        removeButton.append(removeButtonText);
        courseNode.append(removeButton);
        courseSection.appendChild(courseNode);
        save();
    }

    function addExtraCourse() {
        const removeButton = document.createElement("button");
        const removeButtonText = document.createTextNode("Remove");
        const courseSection = document.getElementById("courseSection");
        const courseNode = document.createElement("li");
        const courseSubject = document.getElementById("extraCourseSubject").value.toUpperCase();
        const courseNumber = document.getElementById("extraCourseNumber").value.toUpperCase();
        const courseBin = document.getElementById("extraCourseBin");
        const courseCredit = document.getElementById("extraCourseCredit").value.toUpperCase();
        const courseName = courseSubject + " " + courseNumber;
        let courseNameBin;
        if(courseCredit === "1"){
            courseNameBin = courseName + " (" + courseCredit + " credit, " + courseBin.options[courseBin.selectedIndex].text + ")";
        }else{
            courseNameBin = courseName + " (" + courseCredit + " credits, " + courseBin.options[courseBin.selectedIndex].text + ")";
        }

        const courseNodeText = document.createTextNode(courseNameBin);
        const courseAdd = document.getElementById("courseAdd");
        // Avoid adding duplicate courses
        for (let courseAdded of courseAdd.value.split("&&&")) {
            const courseAddedName = courseAdded.split(" - ")[0];
            if (courseName === courseAddedName) {
                alert("You have already added this course.");
                return;
            }
        }

        if (courseAdd.value.length !== 0) {
            courseAdd.value += "&&&" + courseNameBin;
        } else {
            courseAdd.value = courseNameBin;
        }
        courseNode.className = "list-group-item";
        courseNode.id = courseNameBin;
        removeButton.className = "btn-remove right";
        removeButton.addEventListener("click", function () {
            let newValue = [];
            for (let value of courseAdd.value.split('&&&')) {
                if (value !== removeButton.parentNode.id) {
                    newValue.push(value);
                }
            }
            courseAdd.value = newValue.join('&&&');
            courseSection.removeChild(courseNode);
        });
        courseNode.append(courseNodeText);
        removeButton.append(removeButtonText);
        courseNode.append(removeButton);
        courseSection.appendChild(courseNode);
        save();
    }

    // "Remove" button
    function remove(el) {
        const courseAdd = document.getElementById("courseAdd");
        let newValue = [];
        for (let value of courseAdd.value.split("&&&")) {
            if (value !== el.parentNode.id) {
                newValue.push(value);
            }
        }
        courseAdd.value = newValue.join("&&&");
        el.parentNode.remove();
        save();
    }

    // "Remove All Courses" button
    function removeAll() {
        const courseSection = document.getElementById("courseSection");
        const courseAdd = document.getElementById("courseAdd");
        while (courseSection.lastElementChild) {
            let newValue = [];
            for (let value of courseAdd.value.split("&&&")) {
                if (value !== courseSection.lastElementChild.id) {
                    newValue.push(value);
                }
            }
            courseSection.removeChild(courseSection.lastElementChild);
            courseAdd.value = newValue.join("&&&");
        }
        save();
    }

    function save(){
        const form = document.getElementById('courseForm');
        form.setAttribute('action', "/degree-audit/save");
        form.submit();
        form.setAttribute('action', "/degree-audit/generate");
    }
</script>